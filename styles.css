/*
Replace this example stylesheet with your own.
Please try to keep the code formatting nice.

We want to see a sensible mobile-first, responsive design.
This means the default styles are for the smallest mobile size.
*/

/* Multi-line rulesets must use whitespace for indentation consistently. */
html {
	background-color: rgb(230,230,230);
	min-width: 320px;
}

.menu {
	background-color: black;
	overflow: hidden;
	text-align: center;
}

nav{
	display: none;
	justify-content: center;
	font-size: 2em;
	font-family: sans-serif;
	flex-direction: column;
	text-align: center;
}

nav.closed {
	display: flex;
}

nav a {
	text-align: center;
  background:
    linear-gradient(
      to right,
      rgba(0, 0, 0, 0),
      rgba(100, 200, 200, 0)
    ),
    linear-gradient(
      to right,
      rgba(255, 255, 0, 1),
      rgba(255, 0, 0, 1),
			rgba(0, 0, 255, 1),
			rgba(0, 0, 0, 1),
      rgba(255, 255, 255, 1)
  );
  background-size: 100% 3px, 0 3px;
  background-position: 100% 100%, 0 100%;
  background-repeat: no-repeat;
  transition: background-size 400ms;
}

a:hover {
  background-size: 0 3px, 100% 3px;
}

.navbar a {
	color: #f2f2f2;
	text-align: center;
	padding: 14px 16px;
	text-decoration: none;
	white-space: nowrap;
	transition: 0.3s;
}

.navbar a:hover {
	background-color: #ddd;
	color: black;
}

.navbar a.active {
	background-color: #04AA6D;
	color: white;
}

#menuHandler {
	z-index: 2;
	position: fixed;
	right: 0;
	height: 1em;
	width: 1em;
	padding: 5px 5px 5px 5px;
	text-align: center;
	vertical-align: middle;
	font-size: 3em;
	font-weight: bolder;
	border-radius: 25%;
	color: gold;
}

#menuHandler:hover {
	background-color: lightgrey;
}

body {
	/* note the indentation here */
	color: #024;
	margin: 0;
	font-family: sans-serif;
}

header img {
	margin-top: 1em;
	display: block;
  margin-left: auto;
  margin-right: auto;
	width: 90vw;
	border-radius: 25%;
	background-color: inherit;
	filter: drop-shadow(0 0 0.75rem);
}

/* One-liners are fine for very simple rulesets. */
h1, h2, h3, h4 {
	font-family: sans-serif;
	text-align: center;
}

.ArcheryTitle {
	min-height: 400px;
	background-image: url('Assets/varsityDarkBG.jpg');
	background-size: cover;
	background-repeat: no-repeat;
	background-position: center;
	overflow: auto;
	border-radius: 0 0 50px 50px;
}

.ArcheryTitle h1, .headerSec h1 {
	display: block;
	padding: 0.5em;
	margin: 1em;
	background-color: rgb(230,230,230);
	max-width: 10ch;
	min-width: 10%;
	border-radius: 20px;
}

.article {
	display:grid;
	grid-template-columns: repeat(7, 1fr);
	grid-template-rows: repeat(6,1fr);
	position: relative;
	margin: 1em;
}

.articleText {
	grid-row: 1/span 3;
  grid-column: 1/span 4;
  z-index: 1;
  background-color: rgba(255, 255, 255, 0.75);
  height: fit-content;
	border-radius: 20px;
}
.articleText p{
	padding: 0.5em;
}

.articleImage {
	grid-column: 2/-1;
	grid-column-end: 7;
  grid-row: 2/-1;
	overflow: hidden;
}

.articleImage img {
	max-width: 100%;
	max-height: 100%;
	border-radius: 20px;
}

.personalAchievements, article{
	margin: 1em;
	background-color: rgba(255, 255, 255, 0.75);
	border-radius: 20px;
}

.personalAchievements h3, .personalAchievements p {
	padding: 0.5em;
}

#results {
	justify-content: center;
	display: flex;
	flex-wrap: wrap;
}

article {
	padding: 20px;
	width: 500px;
}

article a {
	display: flex;
	gap: 1em;
	text-decoration: none;
	color: #024;
	justify-content: center;
}

article img{
		width: 200px;
		height: 200px;
		object-fit: cover;
		border-radius: 15%;
}

article p {
	font-size: 10px;
}

article h2 {
	align-self: center;
}

article div {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	align-items: end;
}

.headerSec {
	min-height: 400px;
	background-image: url('Assets/FulldrawHeader.jpg');
	background-size: cover;
	background-repeat: no-repeat;
	background-position: center;
	overflow: auto;
	border-radius: 0 0 50px 50px;
}

.hobby {
	margin: 1em;
	background-color: rgba(255, 255, 255, 0.75);
	border-radius: 75px 75px 25px 25px;
}

.hobby h2{
	padding-top: 0.3em;
}

.hobby p {
	margin: 1em;
}

.hobbyContent {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
}

.hobbyContent img {
	margin: 1em;
	border-radius: 50%;
	width: 300px;
	height: 300px;
	filter: drop-shadow(0 0 0.75rem);
	object-fit:contain;
}

.awards {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

.awards img {
	margin: 1em;
	filter: drop-shadow(0 0 0.75rem);
}

.badge-group {
	padding-left: 0.5em;
	padding-right: 0.5em;
}

.badge-252, .badge-BUTTS {
	width: 200px;
	height: 200px;
	border-radius: 50%;
}

.badge-BUTTS {
	border-radius: 20%;
}

/*
You will probably need at least two media queries to handle larger screens.
Your queries should be configured to work with your content
*/
@media screen and (min-width: 321px) {
	/* Code inside media queries should be indented one step further. */
	body { font-size: 1.2em }

	.article {
		margin: 1em;
	}
}

@media screen and (max-width:725px) {
	.article {
		display: flex;
		flex-direction: column;
		padding-top: 0;
	}

	.articleText{
		border-radius: 20px 20px 0 0;
	}

	.articleImage img{
		border-radius:0 0 20px 20px;
	}
}

@media screen and (min-width:725px) {
	.articleImage {
		grid-column: 3/-1;
		grid-column-end: 8;
	  grid-row: 3/-1;
		overflow: hidden;
	}
}

@media screen and (min-width: 760px){
	.awards {
		flex-direction: row;
	}
}

@media screen and (min-width: 870px) {
	#menuHandler {
		display: none;
	}
	nav {
		display: flex;
		flex-direction: row;
	}

	.hobbyContent {
		flex-direction: row;
	}

	.ArcheryTitle h1, .headerSec h1 {
	display: none;
	}

.article {
	grid-template-columns: repeat(6, 1fr);
	grid-template-rows: repeat(6,1fr);
	}

.articleImage {
	grid-column-end: 10;
	grid-row: 2/-1;
	}
}

@media screen and (min-width: 1024px) {
	.article {
		grid-template-columns: 2.5em repeat(5, 1fr) 5em;
		grid-template-rows: repeat(6,5em);
	}

	.articleText{
		grid-column: 2/span 4;
	}

	.articleImage {
		grid-column-end: 10;
	  grid-row: 2/-1;
	}
}

@media screen and (min-width: 1220px) {
	.article {
		grid-template-columns: 2.5 repeat(7, 1fr) 5em;
		grid-template-rows: repeat(8,5em);
	}

	.articleImage, .articleImageALT {
		grid-column-end: 10;
		grid-row: 2/-1;
	}

@media screen and (min-width: 1460px) {
	.article {
		grid-template-rows: repeat(10,5em);
	}

	.badge-group {
		display: flex;
		flex-direction: row;
	}
}
/*
We don't want to see a min-width of 457px in your code
This was chosen to match the template content.
*/
